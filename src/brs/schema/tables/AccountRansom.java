/*
 * This file is generated by jOOQ.
 */
package brs.schema.tables;


import brs.schema.Db;
import brs.schema.Indexes;
import brs.schema.Keys;
import brs.schema.tables.records.AccountRansomRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRansom extends TableImpl<AccountRansomRecord> {

    private static final long serialVersionUID = 335758683;

    /**
     * The reference instance of <code>DB.account_ransom</code>
     */
    public static final AccountRansom ACCOUNT_RANSOM = new AccountRansom();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountRansomRecord> getRecordType() {
        return AccountRansomRecord.class;
    }

    /**
     * The column <code>DB.account_ransom.db_id</code>.
     */
    public final TableField<AccountRansomRecord, Long> DB_ID = createField("db_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>DB.account_ransom.account_id</code>.
     */
    public final TableField<AccountRansomRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>DB.account_ransom.ransom</code>.
     */
    public final TableField<AccountRansomRecord, Long> RANSOM = createField("ransom", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>DB.account_ransom.apply_time</code>.
     */
    public final TableField<AccountRansomRecord, Long> APPLY_TIME = createField("apply_time", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>DB.account_ransom.height</code>.
     */
    public final TableField<AccountRansomRecord, Integer> HEIGHT = createField("height", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>DB.account_ransom.latest</code>.
     */
    public final TableField<AccountRansomRecord, Boolean> LATEST = createField("latest", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>DB.account_ransom</code> table reference
     */
    public AccountRansom() {
        this(DSL.name("account_ransom"), null);
    }

    /**
     * Create an aliased <code>DB.account_ransom</code> table reference
     */
    public AccountRansom(String alias) {
        this(DSL.name(alias), ACCOUNT_RANSOM);
    }

    /**
     * Create an aliased <code>DB.account_ransom</code> table reference
     */
    public AccountRansom(Name alias) {
        this(alias, ACCOUNT_RANSOM);
    }

    private AccountRansom(Name alias, Table<AccountRansomRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccountRansom(Name alias, Table<AccountRansomRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AccountRansom(Table<O> child, ForeignKey<O, AccountRansomRecord> key) {
        super(child, key, ACCOUNT_RANSOM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Db.DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACCOUNT_RANSOM_ACCOUNT_ID_APPLY_IDX, Indexes.ACCOUNT_RANSOM_APPLY_RANSOM_STATUS_IDX, Indexes.ACCOUNT_RANSOM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AccountRansomRecord, Long> getIdentity() {
        return Keys.IDENTITY_ACCOUNT_RANSOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AccountRansomRecord> getPrimaryKey() {
        return Keys.KEY_ACCOUNT_RANSOM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AccountRansomRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountRansomRecord>>asList(Keys.KEY_ACCOUNT_RANSOM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRansom as(String alias) {
        return new AccountRansom(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountRansom as(Name alias) {
        return new AccountRansom(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountRansom rename(String name) {
        return new AccountRansom(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountRansom rename(Name name) {
        return new AccountRansom(name, null);
    }
}
